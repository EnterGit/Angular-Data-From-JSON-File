{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/quote-page/quote-page.component.css","webpack:///./src/app/quote-page/quote-page.component.html","webpack:///./src/app/quote-page/quote-page.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,+J;;;;;;;;;;;;;;;;;;;;;ACA0C;AAS1C;IANA;QAOE,UAAK,GAAG,KAAK,CAAC;IAEhB,CAAC;IAHY,YAAY;QANxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OAEW,YAAY,CAGxB;IAAD,mBAAC;CAAA;AAHwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AACe;AAET;AACwB;AAcvE;IAAA;IAAyB,CAAC;IAAb,SAAS;QAZrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,mFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;aACjB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;ACnBtB,0BAA0B,iBAAiB,GAAG,YAAY,iCAAiC,oCAAoC,iBAAiB,uBAAuB,8BAA8B,GAAG,WAAW,+FAA+F,qBAAqB,GAAG,6DAA6D,6CAA6C,GAAG,G;;;;;;;;;;;ACAvb,0MAA0M,aAAa,oCAAoC,mBAAmB,yEAAyE,cAAc,sFAAsF,mEAAmE,qBAAqB,uI;;;;;;;;;;;;;;;;;;;;;;;;;ACAje;AACA;AAOlD;IAIE,4BAAoB,IAAgB;QAApC,iBAIC;QAJmB,SAAI,GAAJ,IAAI,CAAY;QAClC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC,SAAS,CAAC,cAAI;YACtD,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,qCAAQ,GAAR,cAAa,CAAC;IAXH,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;;;SAG3B,CAAC;yCAK0B,+DAAU;OAJzB,kBAAkB,CAa9B;IAAD,yBAAC;CAAA;AAb8B;;;;;;;;;;;;;;ACR/B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<h1 class=\\\"text-center mt-5\\\">Motivational Quotes</h1>\\n<div class=\\\"container-fluid mt-5\\\">\\n  <app-quote-page></app-quote-page>\\n</div>\\n\"","import { Component } from '@angular/core';\nimport { } from './quote-page/quote-page.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'app';\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { QuotePageComponent } from './quote-page/quote-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuotePageComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".space {\\n  margin: 10px;\\n}\\n\\n.lines {\\n  border-top: 0.5px solid #ccc;\\n  border-bottom: 0.5px solid #ccc;\\n  padding: 5px;\\n  margin: 10px 0 0 0;\\n  background-color: #F9F9F9;\\n}\\n\\n.card {\\n  /* Add shadows to create the \\\"card\\\" effect */\\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\\n  transition: 0.3s;\\n}\\n\\n/* On mouse-over, add a deeper shadow */\\n\\n.card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\\n}\\n\"","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"quotes\\\">\\n    <div class=\\\"col-lg-3\\\" *ngFor=\\\"let quote of quotes\\\">\\n      <div class=\\\"card space\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5>{{quote.quote}}</h5>\\n          <a href=\\\"#\\\"><b>{{quote.author.name}}</b></a>\\n          <div class=\\\"lines\\\">\\n              <a href=\\\"#\\\">{{quote.topics}}</a>\\n          </div>\\n          <div class=\\\"text-right\\\" style=\\\"padding-top: 15px;\\\">\\n            <i class=\\\"fa fa-2x fa-heart\\\" style=\\\"color: red; padding-right: 10px;\\\"></i>\\n            <i class=\\\"fa fa-2x fa-plus-square-o\\\"></i>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-quote-page',\n  templateUrl: './quote-page.component.html',\n  styleUrls: ['./quote-page.component.css']\n})\nexport class QuotePageComponent implements OnInit {\n\n  quotes: any;\n\n  constructor(private http: HttpClient) {\n    this.http.get('../../assets/quotes.json').subscribe(data => {\n      this.quotes = data;\n    });\n  }\n\n\n  ngOnInit() { }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}